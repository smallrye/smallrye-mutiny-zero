memberSearchIndex = [{"p":"mutiny.zero.operators","c":"Retry","l":"always()"},{"p":"mutiny.zero","c":"AsyncHelpers","l":"applyExceptionally(CompletionStage<T>, Function<Throwable, Throwable>)","url":"applyExceptionally(java.util.concurrent.CompletionStage,java.util.function.Function)"},{"p":"mutiny.zero.operators","c":"Retry","l":"atMost(int)"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"BUFFER"},{"p":"mutiny.zero","c":"Tube","l":"cancelled()"},{"p":"mutiny.zero","c":"PublisherHelpers","l":"collectToList(Flow.Publisher<T>)","url":"collectToList(java.util.concurrent.Flow.Publisher)"},{"p":"mutiny.zero","c":"Tube","l":"complete()"},{"p":"mutiny.zero","c":"AsyncHelpers","l":"composeExceptionally(CompletionStage<T>, Function<Throwable, CompletionStage<T>>)","url":"composeExceptionally(java.util.concurrent.CompletionStage,java.util.function.Function)"},{"p":"mutiny.zero.operators","c":"Concatenate","l":"Concatenate(List<Flow.Publisher<T>>)","url":"%3Cinit%3E(java.util.List)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"create(TubeConfiguration, Consumer<Tube<T>>)","url":"create(mutiny.zero.TubeConfiguration,java.util.function.Consumer)"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"DROP"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"empty()"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"ERROR"},{"p":"mutiny.zero","c":"Tube","l":"fail(Throwable)","url":"fail(java.lang.Throwable)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromCompletionStage(Supplier<CompletionStage<T>>)","url":"fromCompletionStage(java.util.function.Supplier)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromFailure(Throwable)","url":"fromFailure(java.lang.Throwable)"},{"p":"mutiny.zero.vertxpublishers","c":"VertxPublisher","l":"fromFuture(Supplier<Future<? extends ReadStream<T>>>)","url":"fromFuture(java.util.function.Supplier)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromGenerator(Supplier<S>, Function<S, Iterator<T>>)","url":"fromGenerator(java.util.function.Supplier,java.util.function.Function)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromItems(T...)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromIterable(Iterable<T>)","url":"fromIterable(java.lang.Iterable)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"fromStream(Supplier<Stream<T>>)","url":"fromStream(java.util.function.Supplier)"},{"p":"mutiny.zero.vertxpublishers","c":"VertxPublisher","l":"fromSupplier(Supplier<ReadStream<T>>)","url":"fromSupplier(java.util.function.Supplier)"},{"p":"mutiny.zero","c":"TubeConfiguration","l":"getBackpressureStrategy()"},{"p":"mutiny.zero","c":"TubeConfiguration","l":"getBufferSize()"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"IGNORE"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"LATEST"},{"p":"mutiny.zero","c":"Tube","l":"outstandingRequests()"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToReactiveStreams","l":"processor(Flow.Processor<T, R>)","url":"processor(java.util.concurrent.Flow.Processor)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToFlow","l":"processor(Processor<T, R>)","url":"processor(org.reactivestreams.Processor)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToReactiveStreams","l":"publisher(Flow.Publisher<T>)","url":"publisher(java.util.concurrent.Flow.Publisher)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToFlow","l":"publisher(Publisher<T>)","url":"publisher(org.reactivestreams.Publisher)"},{"p":"mutiny.zero.operators","c":"Recover","l":"Recover(Flow.Publisher<T>, Function<Throwable, T>)","url":"%3Cinit%3E(java.util.concurrent.Flow.Publisher,java.util.function.Function)"},{"p":"mutiny.zero.operators","c":"Retry","l":"Retry(Flow.Publisher<T>, Predicate<Throwable>)","url":"%3Cinit%3E(java.util.concurrent.Flow.Publisher,java.util.function.Predicate)"},{"p":"mutiny.zero.operators","c":"Select","l":"Select(Flow.Publisher<T>, Predicate<T>)","url":"%3Cinit%3E(java.util.concurrent.Flow.Publisher,java.util.function.Predicate)"},{"p":"mutiny.zero","c":"Tube","l":"send(T)"},{"p":"mutiny.zero.operators","c":"Transform","l":"subscribe(Flow.Subscriber<? super O>)","url":"subscribe(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.operators","c":"Concatenate","l":"subscribe(Flow.Subscriber<? super T>)","url":"subscribe(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.operators","c":"Recover","l":"subscribe(Flow.Subscriber<? super T>)","url":"subscribe(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.operators","c":"Retry","l":"subscribe(Flow.Subscriber<? super T>)","url":"subscribe(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.operators","c":"Select","l":"subscribe(Flow.Subscriber<? super T>)","url":"subscribe(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToReactiveStreams","l":"subscriber(Flow.Subscriber<T>)","url":"subscriber(java.util.concurrent.Flow.Subscriber)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToFlow","l":"subscriber(Subscriber<T>)","url":"subscriber(org.reactivestreams.Subscriber)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToReactiveStreams","l":"subscription(Flow.Subscription)","url":"subscription(java.util.concurrent.Flow.Subscription)"},{"p":"mutiny.zero.flow.adapters","c":"AdaptersToFlow","l":"subscription(Subscription)","url":"subscription(org.reactivestreams.Subscription)"},{"p":"mutiny.zero","c":"ZeroPublisher","l":"toCompletionStage(Flow.Publisher<T>)","url":"toCompletionStage(java.util.concurrent.Flow.Publisher)"},{"p":"mutiny.zero.operators","c":"Transform","l":"Transform(Flow.Publisher<I>, Function<I, O>)","url":"%3Cinit%3E(java.util.concurrent.Flow.Publisher,java.util.function.Function)"},{"p":"mutiny.zero","c":"TubeConfiguration","l":"TubeConfiguration()","url":"%3Cinit%3E()"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"UNBOUNDED_BUFFER"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"mutiny.zero","c":"BackpressureStrategy","l":"values()"},{"p":"mutiny.zero","c":"Tube","l":"whenCancelled(Runnable)","url":"whenCancelled(java.lang.Runnable)"},{"p":"mutiny.zero","c":"Tube","l":"whenRequested(LongConsumer)","url":"whenRequested(java.util.function.LongConsumer)"},{"p":"mutiny.zero","c":"Tube","l":"whenTerminates(Runnable)","url":"whenTerminates(java.lang.Runnable)"},{"p":"mutiny.zero","c":"TubeConfiguration","l":"withBackpressureStrategy(BackpressureStrategy)","url":"withBackpressureStrategy(mutiny.zero.BackpressureStrategy)"},{"p":"mutiny.zero","c":"TubeConfiguration","l":"withBufferSize(int)"}]